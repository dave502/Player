# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from player_server import player_pb2 as player__pb2


class PlayerStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.AddSong = channel.unary_unary(
                '/player_server.Player/AddSong',
                request_serializer=player__pb2.RequestSongPath.SerializeToString,
                response_deserializer=player__pb2.ResponseResult.FromString,
                )
        self.Play = channel.unary_unary(
                '/player_server.Player/Play',
                request_serializer=player__pb2.RequestSongIndex.SerializeToString,
                response_deserializer=player__pb2.ResponseResult.FromString,
                )
        self.GetPlayList = channel.unary_unary(
                '/player_server.Player/GetPlayList',
                request_serializer=player__pb2.Empty.SerializeToString,
                response_deserializer=player__pb2.ResponsePlaylist.FromString,
                )
        self.PlayingSongInfo = channel.unary_unary(
                '/player_server.Player/PlayingSongInfo',
                request_serializer=player__pb2.Empty.SerializeToString,
                response_deserializer=player__pb2.ResponseSongInformation.FromString,
                )
        self.Pause = channel.unary_unary(
                '/player_server.Player/Pause',
                request_serializer=player__pb2.Empty.SerializeToString,
                response_deserializer=player__pb2.ResponseResult.FromString,
                )
        self.Next = channel.unary_unary(
                '/player_server.Player/Next',
                request_serializer=player__pb2.Empty.SerializeToString,
                response_deserializer=player__pb2.ResponseResult.FromString,
                )
        self.Prev = channel.unary_unary(
                '/player_server.Player/Prev',
                request_serializer=player__pb2.Empty.SerializeToString,
                response_deserializer=player__pb2.ResponseResult.FromString,
                )
        self.Stop = channel.unary_unary(
                '/player_server.Player/Stop',
                request_serializer=player__pb2.Empty.SerializeToString,
                response_deserializer=player__pb2.ResponseResult.FromString,
                )
        self.SetPosition = channel.unary_unary(
                '/player_server.Player/SetPosition',
                request_serializer=player__pb2.RequestSongPosition.SerializeToString,
                response_deserializer=player__pb2.ResponseResult.FromString,
                )
        self.IsPaused = channel.unary_unary(
                '/player_server.Player/IsPaused',
                request_serializer=player__pb2.Empty.SerializeToString,
                response_deserializer=player__pb2.ResponsePaused.FromString,
                )
        self.DeleteSong = channel.unary_unary(
                '/player_server.Player/DeleteSong',
                request_serializer=player__pb2.RequestSongIndex.SerializeToString,
                response_deserializer=player__pb2.ResponseResult.FromString,
                )
        self.GetPlayerStatus = channel.unary_stream(
                '/player_server.Player/GetPlayerStatus',
                request_serializer=player__pb2.Empty.SerializeToString,
                response_deserializer=player__pb2.ResponsePlayerStatus.FromString,
                )
        self.GetSongIndex = channel.unary_unary(
                '/player_server.Player/GetSongIndex',
                request_serializer=player__pb2.Empty.SerializeToString,
                response_deserializer=player__pb2.ResponseSongIndex.FromString,
                )


class PlayerServicer(object):
    """Missing associated documentation comment in .proto file."""

    def AddSong(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Play(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPlayList(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PlayingSongInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Pause(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Next(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Prev(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Stop(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetPosition(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def IsPaused(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteSong(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPlayerStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSongIndex(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_PlayerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'AddSong': grpc.unary_unary_rpc_method_handler(
                    servicer.AddSong,
                    request_deserializer=player__pb2.RequestSongPath.FromString,
                    response_serializer=player__pb2.ResponseResult.SerializeToString,
            ),
            'Play': grpc.unary_unary_rpc_method_handler(
                    servicer.Play,
                    request_deserializer=player__pb2.RequestSongIndex.FromString,
                    response_serializer=player__pb2.ResponseResult.SerializeToString,
            ),
            'GetPlayList': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPlayList,
                    request_deserializer=player__pb2.Empty.FromString,
                    response_serializer=player__pb2.ResponsePlaylist.SerializeToString,
            ),
            'PlayingSongInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.PlayingSongInfo,
                    request_deserializer=player__pb2.Empty.FromString,
                    response_serializer=player__pb2.ResponseSongInformation.SerializeToString,
            ),
            'Pause': grpc.unary_unary_rpc_method_handler(
                    servicer.Pause,
                    request_deserializer=player__pb2.Empty.FromString,
                    response_serializer=player__pb2.ResponseResult.SerializeToString,
            ),
            'Next': grpc.unary_unary_rpc_method_handler(
                    servicer.Next,
                    request_deserializer=player__pb2.Empty.FromString,
                    response_serializer=player__pb2.ResponseResult.SerializeToString,
            ),
            'Prev': grpc.unary_unary_rpc_method_handler(
                    servicer.Prev,
                    request_deserializer=player__pb2.Empty.FromString,
                    response_serializer=player__pb2.ResponseResult.SerializeToString,
            ),
            'Stop': grpc.unary_unary_rpc_method_handler(
                    servicer.Stop,
                    request_deserializer=player__pb2.Empty.FromString,
                    response_serializer=player__pb2.ResponseResult.SerializeToString,
            ),
            'SetPosition': grpc.unary_unary_rpc_method_handler(
                    servicer.SetPosition,
                    request_deserializer=player__pb2.RequestSongPosition.FromString,
                    response_serializer=player__pb2.ResponseResult.SerializeToString,
            ),
            'IsPaused': grpc.unary_unary_rpc_method_handler(
                    servicer.IsPaused,
                    request_deserializer=player__pb2.Empty.FromString,
                    response_serializer=player__pb2.ResponsePaused.SerializeToString,
            ),
            'DeleteSong': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteSong,
                    request_deserializer=player__pb2.RequestSongIndex.FromString,
                    response_serializer=player__pb2.ResponseResult.SerializeToString,
            ),
            'GetPlayerStatus': grpc.unary_stream_rpc_method_handler(
                    servicer.GetPlayerStatus,
                    request_deserializer=player__pb2.Empty.FromString,
                    response_serializer=player__pb2.ResponsePlayerStatus.SerializeToString,
            ),
            'GetSongIndex': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSongIndex,
                    request_deserializer=player__pb2.Empty.FromString,
                    response_serializer=player__pb2.ResponseSongIndex.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'player_server.Player', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Player(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def AddSong(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/player_server.Player/AddSong',
            player__pb2.RequestSongPath.SerializeToString,
            player__pb2.ResponseResult.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Play(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/player_server.Player/Play',
            player__pb2.RequestSongIndex.SerializeToString,
            player__pb2.ResponseResult.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetPlayList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/player_server.Player/GetPlayList',
            player__pb2.Empty.SerializeToString,
            player__pb2.ResponsePlaylist.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PlayingSongInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/player_server.Player/PlayingSongInfo',
            player__pb2.Empty.SerializeToString,
            player__pb2.ResponseSongInformation.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Pause(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/player_server.Player/Pause',
            player__pb2.Empty.SerializeToString,
            player__pb2.ResponseResult.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Next(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/player_server.Player/Next',
            player__pb2.Empty.SerializeToString,
            player__pb2.ResponseResult.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Prev(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/player_server.Player/Prev',
            player__pb2.Empty.SerializeToString,
            player__pb2.ResponseResult.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Stop(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/player_server.Player/Stop',
            player__pb2.Empty.SerializeToString,
            player__pb2.ResponseResult.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetPosition(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/player_server.Player/SetPosition',
            player__pb2.RequestSongPosition.SerializeToString,
            player__pb2.ResponseResult.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def IsPaused(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/player_server.Player/IsPaused',
            player__pb2.Empty.SerializeToString,
            player__pb2.ResponsePaused.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteSong(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/player_server.Player/DeleteSong',
            player__pb2.RequestSongIndex.SerializeToString,
            player__pb2.ResponseResult.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetPlayerStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/player_server.Player/GetPlayerStatus',
            player__pb2.Empty.SerializeToString,
            player__pb2.ResponsePlayerStatus.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSongIndex(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/player_server.Player/GetSongIndex',
            player__pb2.Empty.SerializeToString,
            player__pb2.ResponseSongIndex.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
